package oop;

/**
 * Created by Osman on 11:30 AM
 */
public class OOP {

    /**
     * @OOP - методология программирования, основанная на представлении программы в виде совокупности обьектов,
     * каждый из которых являеться экземляром определенного класса, а классы образуют иерархию наследовния.
     * ООП-  программирование которая ориентирована на обьекты, основу составляют классы и обьекты.
     * ООП позволяет рассширить программу не затрагивая ранне проверенный и работающий кодю
     *
     * Основные парадигмы ООП:
     * @Инкапсуляция - сокрытые реализаций, в Java она достигается при помощи модификаторов доступа.
     * Разработчик делает открытыми только те метода, которы е должны быть доступны за переделами класса.
     *
     * @Наследование - это проццес , создания класса на базе уже существующего класса,что бы эффективно и повторно
     * использовать его состояние и поведение. Наследование - это проццес ,блогодаря которому один обьект
     * приобретает свойства другого, при этом может иметь черты , характерные только для него.
     *
     * @Полиморфизм - один интерфейс, множество реализаций
     * @Class - это не обьект, а шаблон по которому создаются обьект, он описывает
     * как создать обьект определенного типа
     */


    /**
     * то что обьект о себе знает называется:
     * переменные экземпляра или поля [age,name]
     */
    int age;
    String name;


    /**
     * то что обьект о может делать назыается:
     * методы класса
     * действия обьекта называются методами. Они обуславливают поведение обьекта.
     */
    void toDo() { }


}
