package standart_functions

fun main() {

    //причем во всех мы можем и не указать тип, компилятор сам поймет
    var intRange:IntRange=0..233484564
    var longRange:LongRange=0..2454365668778776554
    var charRange:CharRange='A'..'Z'

    /** здесь мы создаем отложенную коллекцию, она срабатывает лишь когда к ней обращаются,
     * стартовое значение у нее ноль, по скольку мы сами указали, а второе это лямбда
     * его условное, то есть шаг, итератор. И с каждым шагом оно увеличивается а take
     * позволет брать первые 100 элементов
     */
    generateSequence (0){it+1 }
            //filter делает фильтрацию только по указанным условиам
            .filter{number ->(2 until number)
                    /**map делить число на все числа из диопозона от 2 до самого числа(не включая его самого)
                     * и если ни один из этих условий не дасть результат остатка -0 то none возвращает true
                     * и этот элемент берется
                     */
                    .map{number%it}.none{it == 0}}

            .take(100)
            .forEach { println("The count size $it.") }






}